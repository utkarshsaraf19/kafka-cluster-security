version: '2.1'
networks:
  zookeepertls:
      name: "zookeepertls"
services:
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer-data:/data
    ports:
      - 9000:9000
    networks:
      - zookeepertls

  zookeeeper-1:
    image: confluentinc/cp-zookeeper:7.1.1
    hostname: zookeeeper-1
    container_name: zookeeeper-1
    ports:
      - 2181:2181
      - 12181:12181
    environment:
      ZOOKEEPER_CLIENT_PORT: 12181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeeper-1:2888:3888;zookeeeper-2:2888:3888;zookeeeper-3:2888:3888
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
      # Zookeeper mTLS Settings
      ZOOKEEPER_SERVER_CNXN_FACTORY: "org.apache.zookeeper.server.NettyServerCnxnFactory"
      ZOOKEEPER_SECURE_CLIENT_PORT: 2181
      ZOOKEEPER_AUTH_PROVIDER_X509: "org.apache.zookeeper.server.auth.X509AuthenticationProvider"
      ZOOKEEPER_SSL_KEYSTORE_LOCATION: /usr/share/keystores/zookeeper-1.keystore.jks
      ZOOKEEPER_SSL_KEYSTORE_PASSWORD: "keystorepass"
      ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /usr/share/keystores/kafka.server.truststore.jks
      ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: "truststorepass"
      # Zookeeper Quorum mTLS settings
      ZOOKEEPER_SSL_QUORUM_KEYSTORE_LOCATION: /usr/share/keystores/zookeeper-1.quorum.keystore.jks
      ZOOKEEPER_SSL_QUORUM_KEYSTORE_PASSWORD: "keystorepass"
      ZOOKEEPER_SSL_QUORUM_TRUSTSTORE_LOCATION: /usr/share/keystores/zookeeper.quorum.truststore.jks
      ZOOKEEPER_SSL_QUORUM_TRUSTSTORE_PASSWORD: "truststorepass"
      ZOOKEEPER_SSL_QUORUM: "true"
    volumes:
      - /home/guru/Documents/Coding/kafka-cluster-security/secure-three-node-cluster/zookeeper_mtls/certs/keystores:/usr/share/keystores
    networks:
      - zookeepertls


  zookeeeper-2:
    image: confluentinc/cp-zookeeper:7.1.1
    hostname: zookeeeper-2
    container_name: zookeeeper-2
    ports:
      - "2182:2182"
    environment:
      ZOOKEEPER_CLIENT_PORT: 12182
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_SERVERS: zookeeeper-1:2888:3888;zookeeeper-2:2888:3888;zookeeeper-3:2888:3888
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
      # Zookeeper mTLS Settings
      ZOOKEEPER_SERVER_CNXN_FACTORY: "org.apache.zookeeper.server.NettyServerCnxnFactory"
      ZOOKEEPER_SECURE_CLIENT_PORT: 2182
      ZOOKEEPER_AUTH_PROVIDER_X509: "org.apache.zookeeper.server.auth.X509AuthenticationProvider"
      ZOOKEEPER_SSL_KEYSTORE_LOCATION: /usr/share/keystores/zookeeper-2.keystore.jks
      ZOOKEEPER_SSL_KEYSTORE_PASSWORD: "keystorepass"
      ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /usr/share/keystores/kafka.server.truststore.jks
      ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: "truststorepass"
      # Zookeeper Quorum mTLS settings
      ZOOKEEPER_SSL_QUORUM_KEYSTORE_LOCATION: /usr/share/keystores/zookeeper-2.quorum.keystore.jks
      ZOOKEEPER_SSL_QUORUM_KEYSTORE_PASSWORD: "keystorepass"
      ZOOKEEPER_SSL_QUORUM_TRUSTSTORE_LOCATION: /usr/share/keystores/zookeeper.quorum.truststore.jks
      ZOOKEEPER_SSL_QUORUM_TRUSTSTORE_PASSWORD: "truststorepass"
      ZOOKEEPER_SSL_QUORUM: "true"
    volumes:
      - /home/guru/Documents/Coding/kafka-cluster-security/secure-three-node-cluster/zookeeper_mtls/certs/keystores:/usr/share/keystores
    networks:
      - zookeepertls

  zookeeeper-3:
    image: confluentinc/cp-zookeeper:7.1.1
    hostname: zookeeeper-3
    container_name: zookeeeper-3
    ports:
      - "2183:2183"
    environment:
      ZOOKEEPER_CLIENT_PORT: 12183
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_SERVERS: zookeeeper-1:2888:3888;zookeeeper-2:2888:3888;zookeeeper-3:2888:3888
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
      # Zookeeper mTLS Settings
      ZOOKEEPER_SERVER_CNXN_FACTORY: "org.apache.zookeeper.server.NettyServerCnxnFactory"
      ZOOKEEPER_SECURE_CLIENT_PORT: 2183
      ZOOKEEPER_AUTH_PROVIDER_X509: "org.apache.zookeeper.server.auth.X509AuthenticationProvider"
      ZOOKEEPER_SSL_KEYSTORE_LOCATION: /usr/share/keystores/zookeeper-3.keystore.jks
      ZOOKEEPER_SSL_KEYSTORE_PASSWORD: "keystorepass"
      ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /usr/share/keystores/kafka.server.truststore.jks
      ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: "truststorepass"
      # Zookeeper Quorum mTLS settings
      ZOOKEEPER_SSL_QUORUM_KEYSTORE_LOCATION: /usr/share/keystores/zookeeper-3.quorum.keystore.jks
      ZOOKEEPER_SSL_QUORUM_KEYSTORE_PASSWORD: "keystorepass"
      ZOOKEEPER_SSL_QUORUM_TRUSTSTORE_LOCATION: /usr/share/keystores/zookeeper.quorum.truststore.jks
      ZOOKEEPER_SSL_QUORUM_TRUSTSTORE_PASSWORD: "truststorepass"
      ZOOKEEPER_SSL_QUORUM: "true"
    volumes:
      - /home/guru/Documents/Coding/kafka-cluster-security/secure-three-node-cluster/zookeeper_mtls/certs/keystores:/usr/share/keystores
    networks:
      - zookeepertls
 
  kafka-1:
    image: confluentinc/cp-kafka:7.1.1
    hostname: kafka-1
    container_name: kafka-1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka-1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeeper-1:2181,zookeeeper-2:2182,zookeeeper-3:2183"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      # Kafka SSL Settings for mtls with Zookeeper
      # Required to use TLS-to-ZooKeeper (default is false)
      KAFKA_ZOOKEEPER_SSL_CLIENT_ENABLE: "true"
      KAFKA_ZOOKEEPER_CLIENT_CNXN_SOCKET: "org.apache.zookeeper.ClientCnxnSocketNetty"
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_LOCATION: /usr/share/keystores/kafka-1.keystore.jks
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_PASSWORD: "keystorepass"
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /usr/share/keystores/kafka.server.truststore.jks
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: "truststorepass"
      # Tells broker to create ACLs on znodes
      KAFKA_ZOOKEEPER_SET_ACL: "false"  
      #KAFKA_OPTS: "-Dzookeeper.clientCnxnSocket=org.apache.zookeeper.ClientCnxnSocketNetty"
    depends_on:
      - zookeeeper-1
      - zookeeeper-2
      - zookeeeper-3
    volumes:
      - /home/guru/Documents/Coding/kafka-cluster-security/secure-three-node-cluster/zookeeper_mtls/certs/keystores:/usr/share/keystores
    networks:
      - zookeepertls

  kafka-2:
    image: confluentinc/cp-kafka:7.1.1
    hostname: kafka-2
    container_name: kafka-2
    ports:
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka-2:19093,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeeper-1:2181,zookeeeper-2:2182,zookeeeper-3:2183"
      KAFKA_BROKER_ID: 2
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      # Kafka SSL Settings for mtls with Zookeeper
      # Required to use TLS-to-ZooKeeper (default is false)
      KAFKA_ZOOKEEPER_SSL_CLIENT_ENABLE: "true"
      KAFKA_ZOOKEEPER_CLIENT_CNXN_SOCKET: "org.apache.zookeeper.ClientCnxnSocketNetty"
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_LOCATION: /usr/share/keystores/kafka-2.keystore.jks
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_PASSWORD: "keystorepass"
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /usr/share/keystores/kafka.server.truststore.jks
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: "truststorepass"
      # Tells broker to create ACLs on znodes
      KAFKA_ZOOKEEPER_SET_ACL: "false"
      #KAFKA_OPTS: "-Dzookeeper.clientCnxnSocket=org.apache.zookeeper.ClientCnxnSocketNetty"
    depends_on:
      - zookeeeper-1
      - zookeeeper-2
      - zookeeeper-3
    volumes:
      - /home/guru/Documents/Coding/kafka-cluster-security/secure-three-node-cluster/zookeeper_mtls/certs/keystores:/usr/share/keystores
    networks:
      - zookeepertls

  kafka-3:
    image: confluentinc/cp-kafka:7.1.1
    hostname: kafka-3
    container_name: kafka-3
    ports:
      - "9094:9094"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka-3:19094,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeeper-1:2181,zookeeeper-2:2182,zookeeeper-3:2183"
      KAFKA_BROKER_ID: 3
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      # Kafka SSL Settings for mtls with Zookeeper
      # Required to use TLS-to-ZooKeeper (default is false)
      KAFKA_ZOOKEEPER_SSL_CLIENT_ENABLE: "true"
      KAFKA_ZOOKEEPER_CLIENT_CNXN_SOCKET: "org.apache.zookeeper.ClientCnxnSocketNetty"
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_LOCATION: /usr/share/keystores/kafka-2.keystore.jks
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_PASSWORD: "keystorepass"
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /usr/share/keystores/kafka.server.truststore.jks
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: "truststorepass"
      # Tells broker to create ACLs on znodes
      KAFKA_ZOOKEEPER_SET_ACL: "false"
      #KAFKA_OPTS: "-Dzookeeper.clientCnxnSocket=org.apache.zookeeper.ClientCnxnSocketNetty"
    depends_on:
      - zookeeeper-1
      - zookeeeper-2
      - zookeeeper-3
    volumes:
      - /home/guru/Documents/Coding/kafka-cluster-security/secure-three-node-cluster/zookeeper_mtls/certs/keystores:/usr/share/keystores
    networks:
      - zookeepertls
